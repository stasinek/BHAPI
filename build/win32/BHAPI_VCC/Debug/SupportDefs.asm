; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

; Generated by VC++ for Common Language Runtime
.file "\Documents and Settings\stasiek.TC12\My Documents\prc++\x86_libraries\Bhapi\src\kits\support\SupportDefs.cpp"
.global	?B_EMPTY_STRING@@3PBDB				; B_EMPTY_STRING
	.rdata
	.space	12

$SG5354:
	.ascii	"\000"
	.data

?B_EMPTY_STRING@@3PBDB:					; B_EMPTY_STRING
	DD	$SG5354
.global	
.global	
	.bss
.local	,4
.local	,4
; Function compile flags: /Odt
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
	.text
	.comdat	any, ??0?$allocator@X@std@@$$FQAE@ABV01@@Z
.global	??0?$allocator@X@std@@$$FQAE@ABV01@@Z		; std::allocator<void>::allocator<void>
??0?$allocator@X@std@@$$FQAE@ABV01@@Z:			; std::allocator<void>::allocator<void>
;	.proc.def	D:I(II)

; Function Header:
; max stack depth = 1
; function size = 2 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers

;	.formal.i4 0,"_this$" SIG: Optional C Binding Modifier(token:0x9B4AAA).Optional C Binding Modifier(token:0x9B4AAC).ptr.valueType (token:0x9B4AAF)

;	.proc.beg

; 197  : 		{	// construct by copying (do nothing)
; 198  : 		}

	ldarg.0				; _this$
$L5506:
	ret		
 .end ??0?$allocator@X@std@@$$FQAE@ABV01@@Z		; std::allocator<void>::allocator<void>
;	.proc.end.i4
text	ENDS
PUBLIC	??0?$allocator@X@std@@QAE@ABV01@@Z		; std::allocator<void>::allocator<void>
PUBLIC	__mep@??0?$allocator@X@std@@$$FQAE@ABV01@@Z
;	COMDAT __mep@??0?$allocator@X@std@@$$FQAE@ABV01@@Z
data	SEGMENT
__mep@??0?$allocator@X@std@@$$FQAE@ABV01@@Z TOKEN 06000038
; Function compile flags: /Odt
data	ENDS
;	COMDAT ??0?$allocator@X@std@@QAE@ABV01@@Z
text	SEGMENT
??0?$allocator@X@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<void>::allocator<void>, COMDAT
	jmp	DWORD PTR __mep@??0?$allocator@X@std@@$$FQAE@ABV01@@Z
??0?$allocator@X@std@@QAE@ABV01@@Z ENDP			; std::allocator<void>::allocator<void>
.global	
.global	
	.bss
.local	,4
.local	,4
; Function compile flags: /Odt
; File c:\documents and settings\stasiek.tc12\my documents\prc++\x86_libraries\bhapi\src\kits\support\supportdefs.cpp
	.text
.global	?atomic_add@bhapi@@$$FYAHPAHH@Z			; bhapi::atomic_add
?atomic_add@bhapi@@$$FYAHPAHH@Z:			; bhapi::atomic_add
;	.proc.def	D:I(II)

; Function Header:
; max stack depth = 1
; function size = 4 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 42   : EXPORT_BHAPI int32 	bhapi::atomic_add (int32 *value, int32 addValue) { return 0; }

	ldc.i.0		0		; i32 0x0
	br.s		$L5521
$L5521:
	ret		
 .end ?atomic_add@bhapi@@$$FYAHPAHH@Z			; bhapi::atomic_add
;	.proc.end.i4
text	ENDS
PUBLIC	?atomic_add@bhapi@@YAHPAHH@Z			; bhapi::atomic_add
PUBLIC	__mep@?atomic_add@bhapi@@$$FYAHPAHH@Z
;	COMDAT __mep@?atomic_add@bhapi@@$$FYAHPAHH@Z
data	SEGMENT
__mep@?atomic_add@bhapi@@$$FYAHPAHH@Z TOKEN 06000039
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_add@bhapi@@YAHPAHH@Z
text	SEGMENT
?atomic_add@bhapi@@YAHPAHH@Z PROC NEAR			; bhapi::atomic_add, COMDAT
	jmp	DWORD PTR __mep@?atomic_add@bhapi@@$$FYAHPAHH@Z
?atomic_add@bhapi@@YAHPAHH@Z ENDP			; bhapi::atomic_add
.global	
.global	
	.bss
.local	,4
.local	,4
; Function compile flags: /Odt
	.text
.global	?atomic_add64@bhapi@@$$FYA_JPA_J_J@Z		; bhapi::atomic_add64
?atomic_add64@bhapi@@$$FYA_JPA_J_J@Z:			; bhapi::atomic_add64
;	.proc.def	D:J(IJ)

; Function Header:
; max stack depth = 1
; function size = 5 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 43   : EXPORT_BHAPI int64 	bhapi::atomic_add64 (int64 *value, int64 addValue) { return 0; }

	ldc.i.0		0		; i64 0x0
	conv.i8		
	br.s		$L5535
$L5535:
	ret		
 .end ?atomic_add64@bhapi@@$$FYA_JPA_J_J@Z		; bhapi::atomic_add64
;	.proc.end.i8
text	ENDS
PUBLIC	?atomic_add64@bhapi@@YA_JPA_J_J@Z		; bhapi::atomic_add64
PUBLIC	__mep@?atomic_add64@bhapi@@$$FYA_JPA_J_J@Z
;	COMDAT __mep@?atomic_add64@bhapi@@$$FYA_JPA_J_J@Z
data	SEGMENT
__mep@?atomic_add64@bhapi@@$$FYA_JPA_J_J@Z TOKEN 0600003A
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_add64@bhapi@@YA_JPA_J_J@Z
text	SEGMENT
?atomic_add64@bhapi@@YA_JPA_J_J@Z PROC NEAR		; bhapi::atomic_add64, COMDAT
	jmp	DWORD PTR __mep@?atomic_add64@bhapi@@$$FYA_JPA_J_J@Z
?atomic_add64@bhapi@@YA_JPA_J_J@Z ENDP			; bhapi::atomic_add64
; Function compile flags: /Odt
	.text
.global	?atomic_and@bhapi@@$$FYAHPAHH@Z			; bhapi::atomic_and
?atomic_and@bhapi@@$$FYAHPAHH@Z:			; bhapi::atomic_and
;	.proc.def	D:I(II)

; Function Header:
; max stack depth = 1
; function size = 4 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 44   : EXPORT_BHAPI int32 	bhapi::atomic_and (int32 *value, int32 andValue) { return 0; }

	ldc.i.0		0		; i32 0x0
	br.s		$L5549
$L5549:
	ret		
 .end ?atomic_and@bhapi@@$$FYAHPAHH@Z			; bhapi::atomic_and
;	.proc.end.i4
text	ENDS
PUBLIC	?atomic_and@bhapi@@YAHPAHH@Z			; bhapi::atomic_and
PUBLIC	__mep@?atomic_and@bhapi@@$$FYAHPAHH@Z
;	COMDAT __mep@?atomic_and@bhapi@@$$FYAHPAHH@Z
data	SEGMENT
__mep@?atomic_and@bhapi@@$$FYAHPAHH@Z TOKEN 0600003B
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_and@bhapi@@YAHPAHH@Z
text	SEGMENT
?atomic_and@bhapi@@YAHPAHH@Z PROC NEAR			; bhapi::atomic_and, COMDAT
	jmp	DWORD PTR __mep@?atomic_and@bhapi@@$$FYAHPAHH@Z
?atomic_and@bhapi@@YAHPAHH@Z ENDP			; bhapi::atomic_and
; Function compile flags: /Odt
	.text
.global	?atomic_and64@bhapi@@$$FYA_JPA_J_J@Z		; bhapi::atomic_and64
?atomic_and64@bhapi@@$$FYA_JPA_J_J@Z:			; bhapi::atomic_and64
;	.proc.def	D:J(IJ)

; Function Header:
; max stack depth = 1
; function size = 5 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 45   : EXPORT_BHAPI int64 	bhapi::atomic_and64 (int64 *value, int64 andValue) { return 0; }

	ldc.i.0		0		; i64 0x0
	conv.i8		
	br.s		$L5561
$L5561:
	ret		
 .end ?atomic_and64@bhapi@@$$FYA_JPA_J_J@Z		; bhapi::atomic_and64
;	.proc.end.i8
text	ENDS
PUBLIC	?atomic_and64@bhapi@@YA_JPA_J_J@Z		; bhapi::atomic_and64
PUBLIC	__mep@?atomic_and64@bhapi@@$$FYA_JPA_J_J@Z
;	COMDAT __mep@?atomic_and64@bhapi@@$$FYA_JPA_J_J@Z
data	SEGMENT
__mep@?atomic_and64@bhapi@@$$FYA_JPA_J_J@Z TOKEN 0600003C
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_and64@bhapi@@YA_JPA_J_J@Z
text	SEGMENT
?atomic_and64@bhapi@@YA_JPA_J_J@Z PROC NEAR		; bhapi::atomic_and64, COMDAT
	jmp	DWORD PTR __mep@?atomic_and64@bhapi@@$$FYA_JPA_J_J@Z
?atomic_and64@bhapi@@YA_JPA_J_J@Z ENDP			; bhapi::atomic_and64
; Function compile flags: /Odt
	.text
.global	?atomic_get@bhapi@@$$FYAHPAH@Z			; bhapi::atomic_get
?atomic_get@bhapi@@$$FYAHPAH@Z:				; bhapi::atomic_get
;	.proc.def	D:I(I)

; Function Header:
; max stack depth = 1
; function size = 4 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 46   : EXPORT_BHAPI int32 	bhapi::atomic_get (int32 *value) { return 0; }

	ldc.i.0		0		; i32 0x0
	br.s		$L5573
$L5573:
	ret		
 .end ?atomic_get@bhapi@@$$FYAHPAH@Z			; bhapi::atomic_get
;	.proc.end.i4
text	ENDS
PUBLIC	?atomic_get@bhapi@@YAHPAH@Z			; bhapi::atomic_get
PUBLIC	__mep@?atomic_get@bhapi@@$$FYAHPAH@Z
;	COMDAT __mep@?atomic_get@bhapi@@$$FYAHPAH@Z
data	SEGMENT
__mep@?atomic_get@bhapi@@$$FYAHPAH@Z TOKEN 0600003D
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_get@bhapi@@YAHPAH@Z
text	SEGMENT
?atomic_get@bhapi@@YAHPAH@Z PROC NEAR			; bhapi::atomic_get, COMDAT
	jmp	DWORD PTR __mep@?atomic_get@bhapi@@$$FYAHPAH@Z
?atomic_get@bhapi@@YAHPAH@Z ENDP			; bhapi::atomic_get
; Function compile flags: /Odt
	.text
.global	?atomic_get64@bhapi@@$$FYA_JPA_J@Z		; bhapi::atomic_get64
?atomic_get64@bhapi@@$$FYA_JPA_J@Z:			; bhapi::atomic_get64
;	.proc.def	D:J(I)

; Function Header:
; max stack depth = 1
; function size = 5 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 47   : EXPORT_BHAPI int64 	bhapi::atomic_get64 (int64 *value) { return 0;}

	ldc.i.0		0		; i64 0x0
	conv.i8		
	br.s		$L5585
$L5585:
	ret		
 .end ?atomic_get64@bhapi@@$$FYA_JPA_J@Z		; bhapi::atomic_get64
;	.proc.end.i8
text	ENDS
PUBLIC	?atomic_get64@bhapi@@YA_JPA_J@Z			; bhapi::atomic_get64
PUBLIC	__mep@?atomic_get64@bhapi@@$$FYA_JPA_J@Z
;	COMDAT __mep@?atomic_get64@bhapi@@$$FYA_JPA_J@Z
data	SEGMENT
__mep@?atomic_get64@bhapi@@$$FYA_JPA_J@Z TOKEN 0600003E
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_get64@bhapi@@YA_JPA_J@Z
text	SEGMENT
?atomic_get64@bhapi@@YA_JPA_J@Z PROC NEAR		; bhapi::atomic_get64, COMDAT
	jmp	DWORD PTR __mep@?atomic_get64@bhapi@@$$FYA_JPA_J@Z
?atomic_get64@bhapi@@YA_JPA_J@Z ENDP			; bhapi::atomic_get64
; Function compile flags: /Odt
	.text
.global	?atomic_get_and_set@bhapi@@$$FYAHPAHH@Z		; bhapi::atomic_get_and_set
?atomic_get_and_set@bhapi@@$$FYAHPAHH@Z:		; bhapi::atomic_get_and_set
;	.proc.def	D:I(II)

; Function Header:
; max stack depth = 1
; function size = 4 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 48   : EXPORT_BHAPI int32 	bhapi::atomic_get_and_set (int32 *value, int32 newValue) { return 0; }

	ldc.i.0		0		; i32 0x0
	br.s		$L5597
$L5597:
	ret		
 .end ?atomic_get_and_set@bhapi@@$$FYAHPAHH@Z		; bhapi::atomic_get_and_set
;	.proc.end.i4
text	ENDS
PUBLIC	?atomic_get_and_set@bhapi@@YAHPAHH@Z		; bhapi::atomic_get_and_set
PUBLIC	__mep@?atomic_get_and_set@bhapi@@$$FYAHPAHH@Z
;	COMDAT __mep@?atomic_get_and_set@bhapi@@$$FYAHPAHH@Z
data	SEGMENT
__mep@?atomic_get_and_set@bhapi@@$$FYAHPAHH@Z TOKEN 0600003F
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_get_and_set@bhapi@@YAHPAHH@Z
text	SEGMENT
?atomic_get_and_set@bhapi@@YAHPAHH@Z PROC NEAR		; bhapi::atomic_get_and_set, COMDAT
	jmp	DWORD PTR __mep@?atomic_get_and_set@bhapi@@$$FYAHPAHH@Z
?atomic_get_and_set@bhapi@@YAHPAHH@Z ENDP		; bhapi::atomic_get_and_set
; Function compile flags: /Odt
	.text
.global	?atomic_get_and_set64@bhapi@@$$FYA_JPA_J_J@Z	; bhapi::atomic_get_and_set64
?atomic_get_and_set64@bhapi@@$$FYA_JPA_J_J@Z:		; bhapi::atomic_get_and_set64
;	.proc.def	D:J(IJ)

; Function Header:
; max stack depth = 1
; function size = 5 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 49   : EXPORT_BHAPI int64 	bhapi::atomic_get_and_set64 (int64 *value, int64 newValue) { return 0; }

	ldc.i.0		0		; i64 0x0
	conv.i8		
	br.s		$L5609
$L5609:
	ret		
 .end ?atomic_get_and_set64@bhapi@@$$FYA_JPA_J_J@Z	; bhapi::atomic_get_and_set64
;	.proc.end.i8
text	ENDS
PUBLIC	?atomic_get_and_set64@bhapi@@YA_JPA_J_J@Z	; bhapi::atomic_get_and_set64
PUBLIC	__mep@?atomic_get_and_set64@bhapi@@$$FYA_JPA_J_J@Z
;	COMDAT __mep@?atomic_get_and_set64@bhapi@@$$FYA_JPA_J_J@Z
data	SEGMENT
__mep@?atomic_get_and_set64@bhapi@@$$FYA_JPA_J_J@Z TOKEN 06000040
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_get_and_set64@bhapi@@YA_JPA_J_J@Z
text	SEGMENT
?atomic_get_and_set64@bhapi@@YA_JPA_J_J@Z PROC NEAR	; bhapi::atomic_get_and_set64, COMDAT
	jmp	DWORD PTR __mep@?atomic_get_and_set64@bhapi@@$$FYA_JPA_J_J@Z
?atomic_get_and_set64@bhapi@@YA_JPA_J_J@Z ENDP		; bhapi::atomic_get_and_set64
; Function compile flags: /Odt
	.text
.global	?atomic_or@bhapi@@$$FYAHPAHH@Z			; bhapi::atomic_or
?atomic_or@bhapi@@$$FYAHPAHH@Z:				; bhapi::atomic_or
;	.proc.def	D:I(II)

; Function Header:
; max stack depth = 1
; function size = 4 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 50   : EXPORT_BHAPI int32 	bhapi::atomic_or (int32 *value, int32 orValue) { return 0; }

	ldc.i.0		0		; i32 0x0
	br.s		$L5621
$L5621:
	ret		
 .end ?atomic_or@bhapi@@$$FYAHPAHH@Z			; bhapi::atomic_or
;	.proc.end.i4
text	ENDS
PUBLIC	?atomic_or@bhapi@@YAHPAHH@Z			; bhapi::atomic_or
PUBLIC	__mep@?atomic_or@bhapi@@$$FYAHPAHH@Z
;	COMDAT __mep@?atomic_or@bhapi@@$$FYAHPAHH@Z
data	SEGMENT
__mep@?atomic_or@bhapi@@$$FYAHPAHH@Z TOKEN 06000041
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_or@bhapi@@YAHPAHH@Z
text	SEGMENT
?atomic_or@bhapi@@YAHPAHH@Z PROC NEAR			; bhapi::atomic_or, COMDAT
	jmp	DWORD PTR __mep@?atomic_or@bhapi@@$$FYAHPAHH@Z
?atomic_or@bhapi@@YAHPAHH@Z ENDP			; bhapi::atomic_or
; Function compile flags: /Odt
	.text
.global	?atomic_or64@bhapi@@$$FYA_JPA_J_J@Z		; bhapi::atomic_or64
?atomic_or64@bhapi@@$$FYA_JPA_J_J@Z:			; bhapi::atomic_or64
;	.proc.def	D:J(IJ)

; Function Header:
; max stack depth = 1
; function size = 5 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 51   : EXPORT_BHAPI int64 	bhapi::atomic_or64 (int64 *value, int64 orValue) { return 0; }

	ldc.i.0		0		; i64 0x0
	conv.i8		
	br.s		$L5633
$L5633:
	ret		
 .end ?atomic_or64@bhapi@@$$FYA_JPA_J_J@Z		; bhapi::atomic_or64
;	.proc.end.i8
text	ENDS
PUBLIC	?atomic_or64@bhapi@@YA_JPA_J_J@Z		; bhapi::atomic_or64
PUBLIC	__mep@?atomic_or64@bhapi@@$$FYA_JPA_J_J@Z
;	COMDAT __mep@?atomic_or64@bhapi@@$$FYA_JPA_J_J@Z
data	SEGMENT
__mep@?atomic_or64@bhapi@@$$FYA_JPA_J_J@Z TOKEN 06000042
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_or64@bhapi@@YA_JPA_J_J@Z
text	SEGMENT
?atomic_or64@bhapi@@YA_JPA_J_J@Z PROC NEAR		; bhapi::atomic_or64, COMDAT
	jmp	DWORD PTR __mep@?atomic_or64@bhapi@@$$FYA_JPA_J_J@Z
?atomic_or64@bhapi@@YA_JPA_J_J@Z ENDP			; bhapi::atomic_or64
; Function compile flags: /Odt
	.text
.global	?atomic_set@bhapi@@$$FYAXPAHH@Z			; bhapi::atomic_set
?atomic_set@bhapi@@$$FYAXPAHH@Z:			; bhapi::atomic_set
;	.proc.def	D:V(II)

; Function Header:
; max stack depth = 0
; function size = 1 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 52   : EXPORT_BHAPI void 	bhapi::atomic_set (int32 *value, int32 newValue) {}

$L5645:
	ret		
 .end ?atomic_set@bhapi@@$$FYAXPAHH@Z			; bhapi::atomic_set
;	.proc.end.void
text	ENDS
PUBLIC	?atomic_set@bhapi@@YAXPAHH@Z			; bhapi::atomic_set
PUBLIC	__mep@?atomic_set@bhapi@@$$FYAXPAHH@Z
;	COMDAT __mep@?atomic_set@bhapi@@$$FYAXPAHH@Z
data	SEGMENT
__mep@?atomic_set@bhapi@@$$FYAXPAHH@Z TOKEN 06000043
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_set@bhapi@@YAXPAHH@Z
text	SEGMENT
?atomic_set@bhapi@@YAXPAHH@Z PROC NEAR			; bhapi::atomic_set, COMDAT
	jmp	DWORD PTR __mep@?atomic_set@bhapi@@$$FYAXPAHH@Z
?atomic_set@bhapi@@YAXPAHH@Z ENDP			; bhapi::atomic_set
; Function compile flags: /Odt
	.text
.global	?atomic_set64@bhapi@@$$FYAXPA_J_J@Z		; bhapi::atomic_set64
?atomic_set64@bhapi@@$$FYAXPA_J_J@Z:			; bhapi::atomic_set64
;	.proc.def	D:V(IJ)

; Function Header:
; max stack depth = 0
; function size = 1 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 53   : EXPORT_BHAPI void 	bhapi::atomic_set64 (int64 *value, int64 newValue) {}

$L5657:
	ret		
 .end ?atomic_set64@bhapi@@$$FYAXPA_J_J@Z		; bhapi::atomic_set64
;	.proc.end.void
text	ENDS
PUBLIC	?atomic_set64@bhapi@@YAXPA_J_J@Z		; bhapi::atomic_set64
PUBLIC	__mep@?atomic_set64@bhapi@@$$FYAXPA_J_J@Z
;	COMDAT __mep@?atomic_set64@bhapi@@$$FYAXPA_J_J@Z
data	SEGMENT
__mep@?atomic_set64@bhapi@@$$FYAXPA_J_J@Z TOKEN 06000044
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_set64@bhapi@@YAXPA_J_J@Z
text	SEGMENT
?atomic_set64@bhapi@@YAXPA_J_J@Z PROC NEAR		; bhapi::atomic_set64, COMDAT
	jmp	DWORD PTR __mep@?atomic_set64@bhapi@@$$FYAXPA_J_J@Z
?atomic_set64@bhapi@@YAXPA_J_J@Z ENDP			; bhapi::atomic_set64
; Function compile flags: /Odt
	.text
.global	?atomic_test_and_set@bhapi@@$$FYAHPAHHH@Z	; bhapi::atomic_test_and_set
?atomic_test_and_set@bhapi@@$$FYAHPAHHH@Z:		; bhapi::atomic_test_and_set
;	.proc.def	D:I(III)

; Function Header:
; max stack depth = 1
; function size = 4 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 54   : EXPORT_BHAPI int32 	bhapi::atomic_test_and_set (int32 *value, int32 newValue, int32 testAgains) { return 0; }

	ldc.i.0		0		; i32 0x0
	br.s		$L5669
$L5669:
	ret		
 .end ?atomic_test_and_set@bhapi@@$$FYAHPAHHH@Z		; bhapi::atomic_test_and_set
;	.proc.end.i4
text	ENDS
PUBLIC	?atomic_test_and_set@bhapi@@YAHPAHHH@Z		; bhapi::atomic_test_and_set
PUBLIC	__mep@?atomic_test_and_set@bhapi@@$$FYAHPAHHH@Z
;	COMDAT __mep@?atomic_test_and_set@bhapi@@$$FYAHPAHHH@Z
data	SEGMENT
__mep@?atomic_test_and_set@bhapi@@$$FYAHPAHHH@Z TOKEN 06000045
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_test_and_set@bhapi@@YAHPAHHH@Z
text	SEGMENT
?atomic_test_and_set@bhapi@@YAHPAHHH@Z PROC NEAR	; bhapi::atomic_test_and_set, COMDAT
	jmp	DWORD PTR __mep@?atomic_test_and_set@bhapi@@$$FYAHPAHHH@Z
?atomic_test_and_set@bhapi@@YAHPAHHH@Z ENDP		; bhapi::atomic_test_and_set
; Function compile flags: /Odt
	.text
.global	?atomic_test_and_set64@bhapi@@$$FYA_JPA_J_J1@Z	; bhapi::atomic_test_and_set64
?atomic_test_and_set64@bhapi@@$$FYA_JPA_J_J1@Z:		; bhapi::atomic_test_and_set64
;	.proc.def	D:J(IJJ)

; Function Header:
; max stack depth = 1
; function size = 5 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 55   : EXPORT_BHAPI int64 	bhapi::atomic_test_and_set64 (int64 *value, int64 newValue, int64 testAgainst) { return 0; }

	ldc.i.0		0		; i64 0x0
	conv.i8		
	br.s		$L5681
$L5681:
	ret		
 .end ?atomic_test_and_set64@bhapi@@$$FYA_JPA_J_J1@Z	; bhapi::atomic_test_and_set64
;	.proc.end.i8
text	ENDS
PUBLIC	?atomic_test_and_set64@bhapi@@YA_JPA_J_J1@Z	; bhapi::atomic_test_and_set64
PUBLIC	__mep@?atomic_test_and_set64@bhapi@@$$FYA_JPA_J_J1@Z
;	COMDAT __mep@?atomic_test_and_set64@bhapi@@$$FYA_JPA_J_J1@Z
data	SEGMENT
__mep@?atomic_test_and_set64@bhapi@@$$FYA_JPA_J_J1@Z TOKEN 06000046
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?atomic_test_and_set64@bhapi@@YA_JPA_J_J1@Z
text	SEGMENT
?atomic_test_and_set64@bhapi@@YA_JPA_J_J1@Z PROC NEAR	; bhapi::atomic_test_and_set64, COMDAT
	jmp	DWORD PTR __mep@?atomic_test_and_set64@bhapi@@$$FYA_JPA_J_J1@Z
?atomic_test_and_set64@bhapi@@YA_JPA_J_J1@Z ENDP	; bhapi::atomic_test_and_set64
; Function compile flags: /Odt
	.text
.global	?get_stack_frame@bhapi@@$$FYAPAXXZ		; bhapi::get_stack_frame
?get_stack_frame@bhapi@@$$FYAPAXXZ:			; bhapi::get_stack_frame
;	.proc.def	D:I()

; Function Header:
; max stack depth = 1
; function size = 4 bytes
; local varsig tk = 0x0 
; Exception Information:
; 0 handlers, each consisting of filtered handlers


;	.proc.beg

; 56   : EXPORT_BHAPI void * 	bhapi::get_stack_frame (void) { return NULL; }

	ldc.i.0		0		; i32 0x0
	br.s		$L5693
$L5693:
	ret		
 .end ?get_stack_frame@bhapi@@$$FYAPAXXZ		; bhapi::get_stack_frame
;	.proc.end.i4
text	ENDS
PUBLIC	?get_stack_frame@bhapi@@YAPAXXZ			; bhapi::get_stack_frame
PUBLIC	__mep@?get_stack_frame@bhapi@@$$FYAPAXXZ
;	COMDAT __mep@?get_stack_frame@bhapi@@$$FYAPAXXZ
data	SEGMENT
__mep@?get_stack_frame@bhapi@@$$FYAPAXXZ TOKEN 06000047
; Function compile flags: /Odt
data	ENDS
;	COMDAT ?get_stack_frame@bhapi@@YAPAXXZ
text	SEGMENT
?get_stack_frame@bhapi@@YAPAXXZ PROC NEAR		; bhapi::get_stack_frame, COMDAT
	jmp	DWORD PTR __mep@?get_stack_frame@bhapi@@$$FYAPAXXZ
?get_stack_frame@bhapi@@YAPAXXZ ENDP			; bhapi::get_stack_frame
text	ENDS
END
