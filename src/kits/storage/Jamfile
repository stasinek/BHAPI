SubDir HAIKU_TOP src kits storage ;

SetSubDirSupportedPlatforms haiku libbe_test ;

UsePrivateHeaders app kernel libroot shared storage ;

# for libbe_test
UsePublicHeaders [ FDirName add-ons registrar ] ;

local architectureObject ;
for architectureObject in [ MultiArchSubDirSetup ] {
	on $(architectureObject) {
		local architecture = $(TARGET_PACKAGING_ARCH) ;

		UsePrivateSystemHeaders ;

		SEARCH_SOURCE += [ FDirName $(SUBDIR) disk_device ] ;
		SEARCH_SOURCE += [ FDirName $(SUBDIR) disk_device jobs ] ;
		SEARCH_SOURCE += [ FDirName $(SUBDIR) mime ] ;
		SEARCH_SOURCE += [ FDirName $(SUBDIR) sniffer ] ;

		MergeObject <libbe!$(architecture)>storage_kit.o :
			AppFileInfo.cpp
			CopyEngine.cpp
			Directory.cpp
			DriverSettings.cpp
			Entry.cpp
			EntryList.cpp
			EntryOperationEngineBase.cpp
			FdIO.cpp
			File.cpp
			FileDescriptorIO.cpp
			FileIO.cpp
			FindDirectory.cpp
			MergedDirectory.cpp
			Mime.cpp
			MimeType.cpp
			Node.cpp
			NodeInfo.cpp
			NodeMonitor.cpp
			OffsetFile.cpp
			Path.cpp
			PathFinder.cpp
			PathMonitor.cpp
			Query.cpp
			QueryPredicate.cpp
			RemoveEngine.cpp
			ResourceFile.cpp
			ResourceItem.cpp
			Resources.cpp
			ResourcesContainer.cpp
			ResourceStrings.cpp
			Statable.cpp
			SymLink.cpp
			Volume.cpp
			VolumeRoster.cpp
			storage_support.cpp

			# sniffer
			CharStream.cpp
			Err.cpp
			DisjList.cpp
			Pattern.cpp
			PatternList.cpp
			Parser.cpp
			Range.cpp
			RPattern.cpp
			RPatternList.cpp
			Rule.cpp

			# disk device API
			DiskDevice.cpp
			DiskDeviceJob.cpp
			DiskDeviceJobGenerator.cpp
			DiskDeviceJobQueue.cpp
			DiskDeviceList.cpp
			DiskDevicePrivate.cpp
			DiskDeviceRoster.cpp
			DiskDeviceTypes.cpp
			DiskDeviceVisitor.cpp
			DiskSystem.cpp
			DiskSystemAddOn.cpp
			DiskSystemAddOnManager.cpp
			MutablePartition.cpp
			Partition.cpp
			PartitionDelegate.cpp
			PartitioningInfo.cpp
			PartitionParameterEditor.cpp
			PartitionReference.cpp

			CreateChildJob.cpp
			DeleteChildJob.cpp
			DefragmentJob.cpp
			InitializeJob.cpp
			MoveJob.cpp
			RepairJob.cpp
			ResizeJob.cpp
			SetStringJob.cpp
			UninitializeJob.cpp
			;
	}
}

HaikuSubInclude mime ;
